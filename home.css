*{
    margin: 0;
}

#mainheading{
    display: flex;
    /* align-items: center; */
    justify-content: center;
    font-weight: bolder;
    background-color:seashell;
}
#mainheading span{
    position: absolute;
    right: 15px;
    top: 5px;
    border: 2px solid green;
    border-radius: 50%;
    padding:5px;
    background-color:rgb(185, 214, 215);
}
#mainheading span:hover{
    cursor: pointer;
    background-color:rgb(34, 134, 100);
    color:antiquewhite;
}
#maincontainer{
    height: 100vh;
    /* width: 100vw;  */ /*Never set the width otherwise your content will flow out of screen on x-axis.*/
    display: grid;
    grid-template-columns: 2fr 4fr;

}

/* --------------------------------------------------------------------------------------------- */
#workcontainer{
    font-size: large;
    border-right: 2px solid green;
    border-top: 2px solid green;
    background-color: rgb(34, 134, 100);
    
    display: flex;
    /* flex-wrap: wrap; */  /* code workout fine even without using it */
    /* box-sizing: border-box; */ /*Without this one also */
    flex-direction: column;   /* This is mendatory the make the things come in a single column. */
    gap: 10px;                /* To set a fixed distance b/w all items. */
    overflow-y:auto;   /* This property is also mendetary to add a scroll bar. If we don't use it then the second box will also re-adjust the items when first box items full the screen size in y-axis.*/
}

#workcontainer > *{
    border: 1px solid rgb(94, 174, 57);
    /* background: linear-gradient(to right, #f0f0f0, #ffffff); */
    background-color: #ffffff;
    padding: 5px;
}
/* --------------------------------------------------------------------------- */
#buttoncontainer{
    border-top: 2px solid green;
    display: flex;
    flex-wrap: wrap;  /* Here wrapping is necessary to wrap the boxes under a desired width */
    justify-content: center;
    align-items: center;
    gap: 15px;
    background-color: seashell;
}
.buttons{
    /* border: 2px solid black; */
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: x-large;
    background-color: rgb(28, 77, 112);
    color: white;
    height: 200px;
    margin: 5px;
    border-radius: 25px;
   flex-basis: calc(34%);
   transition: all 0.5s ease 0.2s;
    /* Ye flex-basis kya bol rha h ki every button ki width 34% of overall box kardo, ab itni width ke sath too only 2-boxes hi aa payenge aik line me.*/

}

/* This is how you can change the position of child elements within a given box. */
/* .buttons:nth-child(2)
{order: 3;} */

#button3{
    position: relative;
    top: -100px;
}
.buttons:hover{
    cursor: pointer;
    transform: translateY(-15px);
    font-size:xx-large;
    background-color: rgb(42, 111, 160);
}
@media screen and (max-width: 500px) {
    .buttons{
        flex-basis: calc(99%);
    }
    #maincontainer{
        grid-template-columns: 1fr 1fr;
    }
    #button3{
        position:relative;
        top: 0px;
    }
}


/* ------------------------------------------------------------------------------------ */

/* Overlay */
.overlay{
    width: 100%;
    height: 100vh;
    /* The overlay will be taken out of the normal flow of the document and positioned relative to the viewport. It will not move when the user scrolls. */
    position: fixed;
    top: 0px;
    left: 0px;
    background: rgba(0, 0, 0, 0.5);
    /* z-index less means we want to send it backside. */
    z-index: -1;
    /* Because we want to make it invisible. */
    opacity: 0;
    transition: 1s;
}

.openoverlay{
    /* z-index more again because now we want to take it upwards. */
    z-index:1;
    /* Now opacity is maximum because we want to see it with complete strength. */
    opacity:1;
}

/* Add Form */
.form1{
    width: 500px;
    padding: 15px 25px;
    background-color: rgb(214, 211, 211);
    position: absolute;
    top: -150%;
    left: 50%;
    transform: translate(-50%,50%);
    box-shadow: 0px 0px 10px 3px gray;
    transition: 2s;
}
.form1 label{
    font-size:x-large;
}
.form1 input{
    padding: 5px;
    font-size: medium;
    margin-bottom: 10px;
}

.form1 span{
    position: absolute;
    right: 0px;
    top: 0px;
    background-color: green;
    color: white;
    height: 30px;
    width: 30px;
    line-height:30px;
    text-align: center;
}
.form1 span:hover{
    cursor: pointer;
}

.sections{
    font-size:small;
    width: 100%;
}

.form1 button{
    margin: 15px 5px;
    padding: 5px;
    background-color: black;
    color: white;
    size: large;
    font-weight: bold;
    width: 70px;
    height: 40px;
    padding: 10px;
}
.form1 button:hover{
    cursor: pointer;
}

.openform{
    top: 1%;
    z-index: 7;
}
/* ---------------------------------------------------------------------------------- */



/* Remove form */
.form2{
    width: 400px;
    height: 250px;
    padding: 15px;
    background-color: rgb(214, 211, 211);
    box-shadow: 0px 0px 5px 5px gray;
    border-radius: 5px;
    /* Way to take a form in center of screen and invisible. */
    position: absolute;
    left: 50%;
    top: -200%;
    transform: translate(-50%, 50%);
    z-index: -1;
    opacity: 0;
    transition: 2s;
    /* --------------------------------------- */

    /* Don't make the form flex. You will be unable to place "x" on top-right corner. */
    /* display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center; */

    


    
}
.form2 *{
    margin: 15px;
    width: 70%;
}
.form2 span{
    background-color: green;
    color: white;
    height: 30px;
    width: 30px;
    line-height: 30px;
    text-align: center;
    position: absolute;
    top: 0px;
    right: 0px;
}
.form2 span:hover{
    cursor: pointer;
}
.form2 h3{
    font-size: 20px;
    font-weight: bolder;
}

.form2 label{
    font-size: large;
    font-weight: bold;
}
.form2 #time{
    font-size: large;
}
.form2 #removebuttonform{
   height: 40px;
   width: 80px;
   background-color: black;
   color: white;
   font-weight: bold;
}
.form2 #removebuttonform:hover{
    cursor: pointer;
}

.form2open{
    opacity: 1;
    z-index: 1;
    top: 50px;
}
